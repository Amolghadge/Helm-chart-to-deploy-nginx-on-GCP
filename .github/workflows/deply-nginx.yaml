name: Deploy Nginx to GKE

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: nginx-cluster
  GKE_ZONE: us-central1-c
  DEPLOYMENT_NAME: nginx-deployment
  HELM_CHART_DIR: ./helm-chart

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Configure Docker for GCR
      run: gcloud auth configure-docker --quiet

    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        project_id: ${{ env.PROJECT_ID }}

    - name: Verify cluster connection
      run: |
        kubectl get nodes
        kubectl cluster-info

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'

    - name: Add bitnami repository (for dependencies if needed)
      run: helm repo add bitnami https://charts.bitnami.com/bitnami

    - name: Update Helm repositories
      run: helm repo update

    - name: Lint Helm chart
      run: |
        helm lint ${{ env.HELM_CHART_DIR }}
        helm template ${{ env.DEPLOYMENT_NAME }} ${{ env.HELM_CHART_DIR }}

    - name: Deploy to GKE with Helm
      run: |
        helm upgrade --install ${{ env.DEPLOYMENT_NAME }} ${{ env.HELM_CHART_DIR }} \
          --namespace=default \
          --create-namespace \
          --set replicaCount=3 \
          --set image.tag="1.25.3" \
          --set service.type=LoadBalancer \
          --set resources.requests.cpu=250m \
          --set resources.requests.memory=256Mi \
          --set resources.limits.cpu=500m \
          --set resources.limits.memory=512Mi \
          --wait \
          --timeout 5m

    - name: Verify deployment
      run: |
        kubectl get pods -l "app.kubernetes.io/name=nginx"
        kubectl get service ${{ env.DEPLOYMENT_NAME }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
        echo ""

    - name: Run smoke test
      run: |
        # Wait for service to get external IP
        sleep 30
        SERVICE_IP=$(kubectl get service ${{ env.DEPLOYMENT_NAME }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        if [ ! -z "$SERVICE_IP" ]; then
          echo "Testing service at http://$SERVICE_IP"
          curl -f http://$SERVICE_IP/health || exit 1
        else
          echo "Service does not have an external IP yet"
        fi

  rollback-on-failure:
    name: Rollback on Failure
    runs-on: ubuntu-latest
    if: failure()
    needs: [setup-build-publish-deploy]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        project_id: ${{ env.PROJECT_ID }}

    - name: Setup Helm
      uses: azure/setup-helm@v3

    - name: Rollback deployment
      run: |
        if helm history ${{ env.DEPLOYMENT_NAME }} | grep -q "FAILED"; then
          helm rollback ${{ env.DEPLOYMENT_NAME }} 0
          echo "Rollback completed"
        else
          echo "No failed deployment to rollback"
        fi
