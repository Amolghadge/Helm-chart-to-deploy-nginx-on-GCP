name: Deploy NGINX to GKE
on:
  push:
    branches: [ main, develop ]
    paths:
      - 'helm-chart/**'
      - '.github/workflows/deploy-nginx.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: nginx-cluster
  GKE_ZONE: ${{ secrets.GCP_ZONE }}
  DEPLOYMENT_NAME: nginx
  IMAGE: nginx
  HELM_CHART_PATH: './helm-chart'

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          token_format: 'access_token'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: Configure gcloud and kubectl
        run: |
          # Set the project
          gcloud config set project $PROJECT_ID
          
          # Install kubectl separately to ensure latest version
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          
          # Verify installations
          echo "=== gcloud version ==="
          gcloud version
          echo "=== kubectl version ==="
          kubectl version --client
          echo "=== gke-gcloud-auth-plugin ==="
          which gke-gcloud-auth-plugin
          gke-gcloud-auth-plugin --version

      - name: Get GKE credentials (traditional method)
        run: |
          # Use traditional auth method instead of gke-gcloud-auth-plugin
          export USE_GKE_GCLOUD_AUTH_PLUGIN=False
          
          gcloud container clusters get-credentials "$GKE_CLUSTER" \
            --zone "$GKE_ZONE" \
            --project "$GKE_PROJECT"
          
          # Verify connection
          kubectl cluster-info
          
          # Get cluster credentials with explicit auth plugin configuration
          gcloud container clusters get-credentials "$GKE_CLUSTER" \
            --zone "$GKE_ZONE" \
            --project "$PROJECT_ID"
          
          # Verify the kubeconfig is properly configured
          echo "=== Kubeconfig ==="
          kubectl config view
          
          # Test cluster connection
          echo "=== Cluster info ==="
          kubectl cluster-info

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.14.4'

      - name: Validate Helm Chart
        run: |
          helm lint $HELM_CHART_PATH
          helm template $DEPLOYMENT_NAME $HELM_CHART_PATH --dry-run

      - name: Deploy to GKE
        run: |
          # Export path again to ensure plugin is available
          export PATH=$PATH:$(gcloud info --format="value(installation.sdk_root)")/bin
          
          # Refresh credentials to ensure they're current
          gcloud container clusters get-credentials "$GKE_CLUSTER" \
            --zone "$GKE_ZONE" \
            --project "$PROJECT_ID"
          
          # Verify connection
          echo "=== Nodes ==="
          kubectl get nodes
          
          # Deploy with Helm
          echo "=== Deploying with Helm ==="
          helm upgrade --install $DEPLOYMENT_NAME $HELM_CHART_PATH \
            --namespace default \
            --create-namespace \
            --wait \
            --timeout=300s \
            --debug

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/$DEPLOYMENT_NAME --timeout=300s
          echo "=== Services ==="
          kubectl get services -o wide
          echo "=== Pods ==="
          kubectl get pods -o wide
          echo "=== Deployments ==="
          kubectl get deployments -o wide
