name: Deploy NGINX to GKE

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'helm-chart/**'
      - '.github/workflows/deploy-nginx.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: nginx-cluster
  GKE_ZONE: ${{ secrets.GCP_ZONE }}
  DEPLOYMENT_NAME: nginx
  IMAGE: nginx
  HELM_CHART_PATH: ./helm-chart
  USE_GKE_GCLOUD_AUTH_PLUGIN: 'True' 
  

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK (with GKE auth plugin)
        uses: google-github-actions/setup-gcloud@v2
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud --quiet auth configure-docker

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE" --project "$PROJECT_ID"

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.12.1'

      - name: Validate Helm Chart
        run: |
          helm lint $HELM_CHART_PATH
          helm template $DEPLOYMENT_NAME $HELM_CHART_PATH --dry-run

      - name: Deploy to GKE
        run: |
          helm upgrade --install $DEPLOYMENT_NAME $HELM_CHART_PATH \
            --namespace default \
            --create-namespace \
            --wait \
            --timeout=300s

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
          kubectl get pods -o wide
          kubectl get deployments -o wide
          
